import{l as s,c as a,b as l,ai as e}from"./chunks/framework.5L2ULDRi.js";const c=JSON.parse('{"title":"rime","description":"","frontmatter":{},"headers":[],"relativePath":"blog/input-method/rime.md","filePath":"blog/input-method/rime.md"}'),n={name:"blog/input-method/rime.md"};function t(h,i,r,p,o,k){return l(),a("div",null,[...i[0]||(i[0]=[e(`<h1 id="rime" tabindex="-1">rime <a class="header-anchor" href="#rime" aria-label="Permalink to &quot;rime&quot;">​</a></h1><h2 id="why" tabindex="-1">why <a class="header-anchor" href="#why" aria-label="Permalink to &quot;why&quot;">​</a></h2><p>rime 是输入法引擎（librime），提供了将输入内容转为候选词等的能力。基于此引擎，诞生了使用与 Android/Windows/MacOS 等平台的输入法 GUI 软件。实现文字输入。</p><p>为什么选择 rime 而不是其他常见输入法呢？</p><p><strong>网络隐私</strong>是首先考虑的因素。各家输入法有各种各样的联网操作，可能获取我们输入的内容和剪切板中的内容。在赋予语音权限之后，更有隐式录制语音的操作。基于 rime 的输入法普遍不联网（需持续验证）。</p><p><strong>庞大词库，可定制词库</strong>是其次。主要是指词库较丰富，在不联网的情况下能提供更好的打字手感，无需困难地查找候选即可选中目标字词。rime 有庞大的第三方词库可以优化候选，如：薄荷输入法、雾凇词库等。</p><div class="info custom-block"><p class="custom-block-title">配置不再劝退</p><p>随着薄荷输入法等配置的发展，rime 从难以配置变得越来越实用。</p></div><p><strong>可定制的输入方案</strong>也是重要因素。除了全拼，我们可能会接触各种别的输入方案，双拼（自然码、小鹤等）、五笔（虎码等），系统自带输入法无法满足个人喜爱的输入方案时，rime 往往成为唯一的选择项。</p><h2 id="how" tabindex="-1">how <a class="header-anchor" href="#how" aria-label="Permalink to &quot;how&quot;">​</a></h2><p>使用 rime 输入法流程：</p><ol><li>下载对应平台的 rime GUI 软件，见 <a href="https://github.com/rime" target="_blank" rel="noreferrer">RIME</a>，安装</li><li>在 rime 用户目录中（状态栏 rime 图标右击可进入），添加输入方案、词库、自定义短语配置，通常网上的配置直接解压覆盖此文件夹</li><li>应用配置（状态栏 rime 图标右击重新部署）</li></ol><h2 id="what" tabindex="-1">what <a class="header-anchor" href="#what" aria-label="Permalink to &quot;what&quot;">​</a></h2><h3 id="○-薄荷输入法" tabindex="-1">○ 薄荷输入法 <a class="header-anchor" href="#○-薄荷输入法" aria-label="Permalink to &quot;○ 薄荷输入法&quot;">​</a></h3><p>薄荷输入法定制的皮肤比较好看👍，emoji 输入方便，候选词可用性中下水平。</p><ul><li>下载 <a href="https://github.com/Mintimate/oh-my-rime" target="_blank" rel="noreferrer">薄荷输入法</a>，并解压薄荷输入法</li><li>启用需要用到的输入方案：default.yaml，取消注释 schema_list 中的项</li><li>添加需要用到的自定义短语：custom_simple.dict.yaml（注意缩进使用 tab，不能用空格）</li><li>重新部署</li></ul><p>Linux 中，配置文件路径：<code>~/.local/share/fcitx5/rime/</code></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复制配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./oh-my-rime-main/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.local/share/fcitx5/rime/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># linux 中，更新 rime 配置后，需要触发其重新部署</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">qdbus</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> org.fcitx.Fcitx5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /controller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> org.fcitx.Fcitx.Controller1.SetConfig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;fcitx://config/addo</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">n/rime/deploy&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rime_deployer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.local/share/fcitx5/rime</span></span></code></pre></div><h3 id="○-白霜词库-万象语法模型-推荐👍" tabindex="-1">○ 白霜词库 + 万象语法模型（推荐👍） <a class="header-anchor" href="#○-白霜词库-万象语法模型-推荐👍" aria-label="Permalink to &quot;○ 白霜词库 + 万象语法模型（推荐👍）&quot;">​</a></h3><p>本方案候选词可用性非常高，日用体验非常好，可配合薄荷输入法皮肤使用</p><p>输入 \` 可进行反查，配合 <a href="https://moqiyinxing.chunqiujinjing.com/index/mo-qi-yin-xing-shuo-ming/fu-zhu-ma-shuo-ming/mo-qi-ma-chai-fen-shuo-ming" target="_blank" rel="noreferrer">辅助码</a> 更好使用</p><ul><li>下载 <a href="https://github.com/gaboolic/rime-frost" target="_blank" rel="noreferrer">白霜词库</a>，并解压</li><li>修改皮肤，<code>weasel.yaml</code> 中添加下方薄荷输入法皮肤</li><li>添加自定义短语 <code>custom_phrase.txt</code>，双拼自定义短语则需修改 <code>custom_phrase_double.txt</code></li><li>下载 <a href="https://github.com/amzxyz/RIME-LMDG" target="_blank" rel="noreferrer">万象语法模型</a>，release 中的 <code>wanxiang-lts-zh-hans.gram </code>（虽然作者推荐给万象词库用，但是白霜词库也可以配合使用），放到用户目录根目录</li><li>输入方案（如 <code>rime_frost_double_pinyin.schema.yaml</code>）中，添加模型启用配置</li><li>重新部署</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">__include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">octagram</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   #启用语法模型</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#语法模型</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">octagram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    grammar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      language</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">wanxiang-lts-zh-hans</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      collocation_max_length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      collocation_min_length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    translator/contextual_suggestions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    translator/max_homophones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    translator/max_homographs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://tomoemami.github.io/20250410T194424--%E4%BD%BF%E7%94%A8rime%E7%9A%84%E4%B8%87%E8%B1%A1%E6%8B%BC%E9%9F%B3%E6%96%B9%E6%A1%88__blog.html" target="_blank" rel="noreferrer">万象拼音使用</a></li></ul>`,24)])])}const g=s(n,[["render",t]]);export{c as __pageData,g as default};
