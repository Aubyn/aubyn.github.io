import{l as i,c as a,b as n,ai as t}from"./chunks/framework.5L2ULDRi.js";const o=JSON.parse('{"title":"Diskpart","description":"","frontmatter":{},"headers":[],"relativePath":"blog/windows/diskpart.md","filePath":"blog/windows/diskpart.md"}'),p={name:"blog/windows/diskpart.md"};function l(h,s,e,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="diskpart" tabindex="-1">Diskpart <a class="header-anchor" href="#diskpart" aria-label="Permalink to &quot;Diskpart&quot;">​</a></h1><h2 id="why" tabindex="-1">why <a class="header-anchor" href="#why" aria-label="Permalink to &quot;why&quot;">​</a></h2><p>diskpart 是一款分区工具，在安装 Windows 系统的时候，使用 diskpart 相较于安装器的分区会更加清晰，没有隐式分区操作，创建第一个分区时会自动采用 4k 对齐。</p><h2 id="how" tabindex="-1">how <a class="header-anchor" href="#how" aria-label="Permalink to &quot;how&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">diskpart</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disk</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disk</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">convert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gpt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建 EFI 分区，单位 MB</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> partition</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> efi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> size=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> quick</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fs=fat32</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> partition</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mbr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> size=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建主分区（C 盘、D 盘等），不加 size 表示剩下所有空间都用来创建这个分区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> partition</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> primary</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看所有分区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> par</span></span></code></pre></div>`,5)])])}const c=i(p,[["render",l]]);export{o as __pageData,c as default};
