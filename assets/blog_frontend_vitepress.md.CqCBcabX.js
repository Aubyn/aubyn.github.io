import{l as a,c as t,b as r,ai as i}from"./chunks/framework.DfOqixww.js";const u=JSON.parse('{"title":"vitepress","description":"","frontmatter":{},"headers":[],"relativePath":"blog/frontend/vitepress.md","filePath":"blog/frontend/vitepress.md"}'),s={name:"blog/frontend/vitepress.md"};function o(l,e,n,h,d,p){return r(),t("div",null,e[0]||(e[0]=[i('<h1 id="vitepress" tabindex="-1">vitepress <a class="header-anchor" href="#vitepress" aria-label="Permalink to &quot;vitepress&quot;">​</a></h1><h2 id="是什么" tabindex="-1">是什么 <a class="header-anchor" href="#是什么" aria-label="Permalink to &quot;是什么&quot;">​</a></h2><p>vitepress 是一款静态网站构建工具，支持从 markdown 生成静态网站。</p><h2 id="为什么" tabindex="-1">为什么 <a class="header-anchor" href="#为什么" aria-label="Permalink to &quot;为什么&quot;">​</a></h2><p>在博客启动前，对比了 vitepress, astro, qwik。都支持文件结构即路由。</p><p>astro 的问题是，在 md 中嵌入复杂组件时，集成方式过于复杂。</p><p>qwik 的问题则在其无法使用 vue/react 等通用组件，而是自己又用了一套组件。当然也有其优势，能更好地控制 js 数量，实现秒加载。</p><p>vitepress 能方便地集成 vue 组件，成了首选项。</p><h2 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用&quot;">​</a></h2><h3 id="○-使用-emoji" tabindex="-1">○ 使用 emoji <a class="header-anchor" href="#○-使用-emoji" aria-label="Permalink to &quot;○ 使用 emoji&quot;">​</a></h3><p>语法：<code>:tada:</code>，对应：🎉</p><p>参考：<a href="https://github.com/markdown-it/markdown-it-emoji/blob/master/lib/data/full.mjs" target="_blank" rel="noreferrer">emoji 完整缩写列表</a></p><h3 id="○-添加评论" tabindex="-1">○ 添加评论 <a class="header-anchor" href="#○-添加评论" aria-label="Permalink to &quot;○ 添加评论&quot;">​</a></h3><p>通过 <a href="https://utteranc.es/" target="_blank" rel="noreferrer">utterances</a>（GitHub App）注入评论能力，无需显式填写类似 token 的敏感信息</p><h3 id="○-构建出错-window-localstorage-等未定义" tabindex="-1">○ 构建出错：window/localStorage 等未定义 <a class="header-anchor" href="#○-构建出错-window-localstorage-等未定义" aria-label="Permalink to &quot;○ 构建出错：window/localStorage 等未定义&quot;">​</a></h3><p>vitepress 只能识别 node 相关的全局变量。如用到浏览器相关全局变量，可在组件使用时，用 <code>&lt;ClientOnly&gt;&lt;/ClientOnly&gt;</code> 包裹，表示客户端中解析执行，则不再提示构建出错</p><h3 id="○-添加图片" tabindex="-1">○ 添加图片 <a class="header-anchor" href="#○-添加图片" aria-label="Permalink to &quot;○ 添加图片&quot;">​</a></h3><p>直接添加（不用加到 public 目录），后续构建会自动存放到 assets 文件夹</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://vitepress.dev/zh/guide/what-is-vitepress" target="_blank" rel="noreferrer">Vitepress</a></li><li><a href="http://www.zichin.com/blog/1.VitePress/1.%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/1.Vitepress%E7%AE%80%E4%BB%8B.html" target="_blank" rel="noreferrer">子卿全栈系列💯</a></li><li><a href="https://ivestszheng.github.io/posts/%E5%89%8D%E7%AB%AF/%E4%BD%BF%E7%94%A8%20Utterances%20%E7%BB%99%20VitePress%20%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD" target="_blank" rel="noreferrer">使用 Utterances 给 VitePress 添加评论功能|无声2017的博客</a>，博客中有 Vue2/3 的一些使用经验</li><li><a href="https://github.com/giscus/giscus" target="_blank" rel="noreferrer">giscus</a>，类似 utterances</li></ul>',20)]))}const b=a(s,[["render",o]]);export{u as __pageData,b as default};
